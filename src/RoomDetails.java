
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author dell
 */
public class RoomDetails extends javax.swing.JInternalFrame implements globalvariables {

    /**
     * Creates new form RoomDetails
     */
    String res;

    public RoomDetails() {
        initComponents();

        try {
            Connection myconnection;

            myconnection = DriverManager.getConnection(PATH + PLACE, USERNAME, PASSWORD);
            try {
                String a = "select * from roomdetails";
                PreparedStatement mystatement = myconnection.prepareStatement(a);

                ResultSet myresult = mystatement.executeQuery();

                DefaultTableModel mymodel = (DefaultTableModel) jTable1.getModel();

                if (myresult.next()) {

                    jScrollPane1.setVisible(true);
                    getContentPane().revalidate();
                    mymodel.setRowCount(0);

                    do {
                        String b = "select * from customer where arrival <= ? and departure >= ? and room_no=?";
                        PreparedStatement mystatement2 = myconnection.prepareStatement(b);

                        java.util.Date dateobj = new java.util.Date();
                        SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                        mystatement2.setString(1, myformat.format(dateobj));
                        mystatement2.setString(2, myformat.format(dateobj));
                        mystatement2.setString(3, myresult.getString("roomno"));
                        ResultSet myresult2 = mystatement2.executeQuery();
                        if (myresult2.next()) {
                            res = "Booked";
                        } else {
                            res = "Available";
                        }
                        String rno, type, desc, rate;
                        rno = myresult.getString("roomno");
                        type = myresult.getString("type");
                        desc = myresult.getString("description");
                        rate = myresult.getString("rate");

                        mymodel.addRow(new Object[]{rno, type, desc, rate, res});
                    } while (myresult.next());

                } else {
                    jScrollPane1.setVisible(false);
                    JOptionPane.showMessageDialog(rootPane, "No records exists");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Error in Query " + e.getMessage());
            } finally {
                myconnection.close();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setTitle("Room Details");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room No.", "Room Type", "Description", "Room Rate", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(100);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(1).setMinWidth(200);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(200);
            jTable1.getColumnModel().getColumn(3).setMinWidth(100);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(4).setMinWidth(100);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 14)); // NOI18N
        jLabel1.setText("Room Type :");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Type", "Single Room (Non AC)", "Single Room (AC)", "Double Room", "Superior Twins", "Deluxe Room", "Suite" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 949, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(298, 298, 298))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        try {
            Connection myconnection;

            myconnection = DriverManager.getConnection(PATH + PLACE, USERNAME, PASSWORD);
            try {
                String a = "select * from roomdetails where type=?";
                PreparedStatement mystatement = myconnection.prepareStatement(a);
                mystatement.setString(1, jComboBox1.getSelectedItem().toString());

                ResultSet myresult = mystatement.executeQuery();

                DefaultTableModel mymodel = (DefaultTableModel) jTable1.getModel();

                if (myresult.next()) {

                    jScrollPane1.setVisible(true);
                    getContentPane().revalidate();
                    mymodel.setRowCount(0);

                    do {
                        String b = "select * from customer where arrival <= ? and departure >= ? and room_no=?";
                        PreparedStatement mystatement2 = myconnection.prepareStatement(b);

                        java.util.Date dateobj = new java.util.Date();
                        SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                        mystatement2.setString(1, myformat.format(dateobj));
                        mystatement2.setString(2, myformat.format(dateobj));
                        mystatement2.setString(3, myresult.getString("roomno"));
                        ResultSet myresult2 = mystatement2.executeQuery();
                        if (myresult2.next()) {
                            res = "Booked";
                        } else {
                            res = "Available";
                        }
                        String rno, type, desc, rate;
                        rno = myresult.getString("roomno");
                        type = myresult.getString("type");
                        desc = myresult.getString("description");
                        rate = myresult.getString("rate");

                        mymodel.addRow(new Object[]{rno, type, desc, rate, res});
                    } while (myresult.next());

                } else {
                    jScrollPane1.setVisible(false);
                    JOptionPane.showMessageDialog(rootPane, "No records exists");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Error in Query " + e.getMessage());
            } finally {
                myconnection.close();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
